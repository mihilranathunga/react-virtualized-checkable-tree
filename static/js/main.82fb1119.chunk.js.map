{"version":3,"sources":["IconElement.tsx","VirtualTree.tsx","Explorer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IconElement","props","className","onClick","xmlns","id","viewBox","width","height","fill","d","RANDOM_WORDS","data","i","push","createRandomizedItem","createRandomizedData","depth","item","name","Math","floor","random","length","numChildren","children","expanded","VirtualTree","List","setRef","ref","cellRenderer","params","renderedCell","renderItem","keyPrefix","itemText","key","map","child","index","unshift","style","cursor","event","stopPropagation","recomputeRowHeights","forceUpdate","type","value","e","htmlFor","rowHeight","getExpandedItemCount","count","reduce","total","overscanRowCount","rowRenderer","rowCount","Explorer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8LAEe,SAASA,EAAYC,GAClC,OACE,yBAAKC,UAAU,WAAWC,QAASF,EAAME,SACvC,yBACEC,MAAM,6BACNC,GAAG,UACHC,QAAQ,YACRC,MAAM,OACNC,OAAO,QAEP,0BACEC,KAAK,UACLC,EAAE,8hECVZ,IACMC,EAAe,CACnB,aACA,eACA,WACA,UACA,SACA,SACA,cACA,cACA,SACA,eACA,cACA,SACA,YACA,WACA,cACA,SACA,aACA,cACA,aACA,UACA,aACA,WACA,QACA,WACA,WACA,YACA,UACA,UACA,SACA,YACA,aACA,kBACA,iBACA,WACA,gBACA,cACA,UACA,WACA,OACA,UACA,YACA,cACA,UACA,QACA,SACA,SACA,YACA,WACA,YACA,UACA,YACA,UACA,OACA,UACA,aACA,WACA,SACA,WACA,UACA,cACA,aACA,iBACA,WACA,aACA,UACA,cACA,cACA,gBACA,eACA,iBACA,SACA,iBACA,cACA,YACA,cACA,eACA,eACA,YACA,WACA,UACA,WACA,iBACA,UACA,YACA,MACA,aACA,UAEIC,EAEC,WAGL,IAFA,IAAIA,EAAO,GAEFC,EAAI,EAAGA,EAAI,IAAOA,IACzBD,EAAKE,KAAKC,EAAqB,IAGjC,OAAOH,EATII,GAYN,SAASD,EAAqBE,GACnC,IAAMC,EAAY,CAClBA,SAAgB,IAChBA,EAAKC,KAAOR,EAAaS,KAAKC,MAAMD,KAAKE,SAAWX,EAAaY,SAGjE,IADA,IAAIC,EAAcP,EAAQ,EAAIG,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EACrDT,EAAI,EAAGA,EAAIW,EAAaX,IAC/BK,EAAKO,SAASX,KAAKC,EAAqBE,EAAQ,IAKlD,OAFAC,EAAKQ,SAAWF,EAAc,GAAKJ,KAAKE,SAAW,IAE5CJ,EAGM,SAASS,IACtB,IAAIC,EACJ,SAASC,EAAOC,GACdF,EAAOE,EAGT,IAkEMC,EAAe,SAAsBC,GACzC,IAAMC,EAnEW,SAAbC,EAAuBhB,EAAWiB,GACtC,IASIC,EAFEnC,EAAa,CAAEoC,IAAKF,GACtBV,EAAW,GAoCf,OAjCIP,EAAKO,SAASF,OACZL,EAAKQ,UAEPU,EAAW,OAASlB,EAAKC,KACzBM,EAAWP,EAAKO,SAASa,KAAI,SAAUC,EAAYC,GACjD,OAAON,EAAWK,EAAOJ,EAAY,IAAMK,OAG7CJ,EAAW,OAASlB,EAAKC,KAG3BiB,EAAW,OAASlB,EAAKC,KAG3BM,EAASgB,QACP,yBACEvC,UAAU,OACVmC,IAAI,QACJK,MAAO,CAAEC,OAAQzB,EAAKO,SAASF,OAAS,UAAY,SAEpD,kBAACvB,EAAD,CAAaG,QA/BD,SAAUyC,GACxBA,EAAMC,kBACN3B,EAAKQ,UAAYR,EAAKQ,SACtBE,EAAKkB,sBACLlB,EAAKmB,iBA4BH,2BACEC,KAAK,WACL3C,GAAI8B,EACJhB,KAAMgB,EACNc,MAAM,QACN9C,QAAS,SAAC+C,GACRA,EAAEL,qBAGN,2BAAOM,QAAShB,GAAYC,KAI9B,4BACE,wCAAQnC,EAAR,CAAewB,SAAUA,MAoBRS,CAAWtB,EAAKoB,EAAOQ,OAAQR,EAAOQ,OAE3D,OACE,wBAAIH,IAAKL,EAAOK,IAAKK,MAAOV,EAAOU,OAChCT,IAKDmB,EAAY,SAAmBpB,GACnC,OAxMe,GA+KY,SAAvBqB,EAAiCnC,GACrC,IAAIoC,EAAQ,EAUZ,OARIpC,EAAKQ,WACP4B,GAASpC,EAAKO,SACXa,IAAIe,GACJE,QAAO,SAAUC,EAAeF,GAC/B,OAAOE,EAAQF,IACd,IAGAA,EAcAD,CAAqBzC,EAAKoB,EAAOQ,SAG1C,OACE,kBAAC,IAAD,CACEf,SAAU,SAAUO,GAClB,OACE,kBAAC,IAAD,CACExB,OAAQwB,EAAOxB,OACfiD,iBAAkB,GAClB3B,IAAKD,EACLuB,UAAWA,EACXM,YAAa3B,EACbxB,MAAOyB,EAAOzB,MACdoD,SAAU/C,EAAKW,YCvNpB,SAASqC,IACd,OACE,yBAAK1D,UAAU,YACb,kBAACyB,EAAD,OCOSkC,MARf,WACE,OACE,yBAAK3D,UAAU,OACb,kBAAC0D,EAAD,QCIcE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.82fb1119.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function IconElement(props: { onClick: any }) {\r\n  return (\r\n    <div className=\"svg-icon\" onClick={props.onClick}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        id=\"Outline\"\r\n        viewBox=\"0 0 64 64\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      >\r\n        <path\r\n          fill=\"#DEB887\"\r\n          d=\"M57,33h.64551a2.98685,2.98685,0,0,0,2.78613-1.88574l1.35547-3.3877A2.99766,2.99766,0,0,0,62,26.61523V16a3.00328,3.00328,0,0,0-3-3H57A2.994,2.994,0,0,0,54.16907,15.049l-5.33423-2.25916A4.99715,4.99715,0,0,0,44,9a4.941,4.941,0,0,0-2.48706.68854l-17.52173-7.421A2.99975,2.99975,0,0,0,21.65137,7.792L22,7.93964V29.10107A5.01441,5.01441,0,0,0,18.42383,32h-3.5166a3.00136,3.00136,0,0,0-2.25782,1.02441l-5.90625,6.751A2.99688,2.99688,0,0,0,6,41.752V55H5a3.00328,3.00328,0,0,0-3,3v1a3.00328,3.00328,0,0,0,3,3H59a3.00328,3.00328,0,0,0,3-3V58a3.00328,3.00328,0,0,0-3-3H53V54a3.00328,3.00328,0,0,0-3-3V47h2V45H50V44L47.78381,29H49V27H47.48834l-1.26269-8.54645c.089-.04474.17584-.09253.26178-.14233L54,21.49353V30A3.00328,3.00328,0,0,0,57,33ZM56,16a1.00067,1.00067,0,0,1,1-1h2a1.00067,1.00067,0,0,1,1,1V26.61523a1.0069,1.0069,0,0,1-.07129.3711l-1.35449,3.38476A.99559.99559,0,0,1,57.64551,31H57a1.00067,1.00067,0,0,1-1-1Zm-9-2a3,3,0,1,1-3-3A3.00328,3.00328,0,0,1,47,14ZM21.90039,4.63965a1.00081,1.00081,0,0,1,1.31152-.53027l16.67267,7.06134A4.96781,4.96781,0,0,0,39.1,13.0108L22.43066,5.9502A1.00144,1.00144,0,0,1,21.90039,4.63965ZM39.16522,15.21033a4.995,4.995,0,0,0,2.60852,3.24286L40.50757,27H39v2h1.21124l-2.2005,14.85352L38.00922,45H36v2h2.00659l-.00525,4H38a3.00328,3.00328,0,0,0-3,3v1H27V46h2a7,7,0,0,0,0-14H27.57617A5.01441,5.01441,0,0,0,24,29.10107V8.7868ZM25,55H13V44a1.00067,1.00067,0,0,1,1-1H24a1.00067,1.00067,0,0,1,1,1ZM23,31a3,3,0,1,1-3,3A3.00328,3.00328,0,0,1,23,31ZM8,41.752a.99782.99782,0,0,1,.248-.65918l5.90625-6.751A.99966.99966,0,0,1,14.90723,34H18a5,5,0,0,0,10,0h1a5,5,0,0,1,0,10H27a3.00328,3.00328,0,0,0-3-3H14a3.00328,3.00328,0,0,0-3,3V55H8ZM59,57a1.00067,1.00067,0,0,1,1,1v1a1.00067,1.00067,0,0,1-1,1H5a1.00067,1.00067,0,0,1-1-1V58a1.00067,1.00067,0,0,1,1-1Zm-8-3v1H37V54a1.00067,1.00067,0,0,1,1-1H50A1.00067,1.00067,0,0,1,51,54Zm-3-3H40V47h8Zm0-6.92676V45H40v-.92676L42.23315,29h3.5337ZM45.47058,27H42.52942l1.18945-8.02844c.095.00537.18488.02844.28113.02844s.18616-.02307.28113-.02844Zm2.645-10.171A4.96809,4.96809,0,0,0,48.9,14.98926L54,17.14917v2.17249Z\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AutoSizer, List as VirtualList } from \"react-virtualized\";\r\nimport IconElement from \"./IconElement\";\r\n\r\nconst ROW_HEIGHT = 32;\r\nconst RANDOM_WORDS = [\r\n  \"abstrusity\",\r\n  \"advertisable\",\r\n  \"bellwood\",\r\n  \"benzole\",\r\n  \"boreum\",\r\n  \"brenda\",\r\n  \"cassiopeian\",\r\n  \"chansonnier\",\r\n  \"cleric\",\r\n  \"conclusional\",\r\n  \"conventicle\",\r\n  \"copalm\",\r\n  \"cornopion\",\r\n  \"crossbar\",\r\n  \"disputative\",\r\n  \"djilas\",\r\n  \"ebracteate\",\r\n  \"ephemerally\",\r\n  \"epidemical\",\r\n  \"evasive\",\r\n  \"eyeglasses\",\r\n  \"farragut\",\r\n  \"fenny\",\r\n  \"ferryman\",\r\n  \"fluently\",\r\n  \"foreigner\",\r\n  \"genseng\",\r\n  \"glaiket\",\r\n  \"haunch\",\r\n  \"histogeny\",\r\n  \"illocution\",\r\n  \"imprescriptible\",\r\n  \"inapproachable\",\r\n  \"incisory\",\r\n  \"intrusiveness\",\r\n  \"isoceraunic\",\r\n  \"japygid\",\r\n  \"juiciest\",\r\n  \"jump\",\r\n  \"kananga\",\r\n  \"leavening\",\r\n  \"legerdemain\",\r\n  \"licence\",\r\n  \"licia\",\r\n  \"luanda\",\r\n  \"malaga\",\r\n  \"mathewson\",\r\n  \"nonhumus\",\r\n  \"nonsailor\",\r\n  \"nummary\",\r\n  \"nyregyhza\",\r\n  \"onanist\",\r\n  \"opis\",\r\n  \"orphrey\",\r\n  \"paganising\",\r\n  \"pebbling\",\r\n  \"penchi\",\r\n  \"photopia\",\r\n  \"pinocle\",\r\n  \"principally\",\r\n  \"prosector.\",\r\n  \"radiosensitive\",\r\n  \"redbrick\",\r\n  \"reexposure\",\r\n  \"revived\",\r\n  \"subexternal\",\r\n  \"sukarnapura\",\r\n  \"supersphenoid\",\r\n  \"tabularizing\",\r\n  \"territorialism\",\r\n  \"tester\",\r\n  \"thalassography\",\r\n  \"tuberculise\",\r\n  \"uncranked\",\r\n  \"undersawyer\",\r\n  \"unimpartible\",\r\n  \"unsubdivided\",\r\n  \"untwining\",\r\n  \"unwaived\",\r\n  \"webfoot\",\r\n  \"wedeling\",\r\n  \"wellingborough\",\r\n  \"whiffet\",\r\n  \"whipstall\",\r\n  \"wot\",\r\n  \"yonkersite\",\r\n  \"zonary\"\r\n];\r\nconst data = createRandomizedData();\r\n\r\nexport function createRandomizedData() {\r\n  var data = [];\r\n\r\n  for (var i = 0; i < 10000; i++) {\r\n    data.push(createRandomizedItem(0));\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nexport function createRandomizedItem(depth: number) {\r\n  const item: any = {};\r\n  item.children = [];\r\n  item.name = RANDOM_WORDS[Math.floor(Math.random() * RANDOM_WORDS.length)];\r\n\r\n  var numChildren = depth < 3 ? Math.floor(Math.random() * 5) : 0;\r\n  for (var i = 0; i < numChildren; i++) {\r\n    item.children.push(createRandomizedItem(depth + 1));\r\n  }\r\n\r\n  item.expanded = numChildren > 0 && Math.random() < 0.25;\r\n\r\n  return item;\r\n}\r\n\r\nexport default function VirtualTree() {\r\n  let List: any;\r\n  function setRef(ref: any) {\r\n    List = ref;\r\n  }\r\n\r\n  const renderItem = function (item: any, keyPrefix: string) {\r\n    const onClick = function (event: any) {\r\n      event.stopPropagation();\r\n      item.expanded = !item.expanded;\r\n      List.recomputeRowHeights();\r\n      List.forceUpdate();\r\n    };\r\n\r\n    const props: any = { key: keyPrefix };\r\n    let children = [];\r\n    let itemText: any;\r\n\r\n    if (item.children.length) {\r\n      if (item.expanded) {\r\n        //   props.onClick = onClick;\r\n        itemText = \"[-] \" + item.name;\r\n        children = item.children.map(function (child: any, index: number) {\r\n          return renderItem(child, keyPrefix + \"-\" + index);\r\n        });\r\n      } else {\r\n        itemText = \"[+] \" + item.name;\r\n      }\r\n    } else {\r\n      itemText = \"    \" + item.name;\r\n    }\r\n\r\n    children.unshift(\r\n      <div\r\n        className=\"item\"\r\n        key=\"label\"\r\n        style={{ cursor: item.children.length ? \"pointer\" : \"auto\" }}\r\n      >\r\n        <IconElement onClick={onClick} />\r\n        <input\r\n          type=\"checkbox\"\r\n          id={keyPrefix}\r\n          name={keyPrefix}\r\n          value=\"false\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n        />\r\n        <label htmlFor={keyPrefix}>{itemText}</label>\r\n      </div>\r\n    );\r\n    return (\r\n      <ul>\r\n        <li {...props} children={children}></li>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const getExpandedItemCount = function (item: any) {\r\n    var count = 1;\r\n\r\n    if (item.expanded) {\r\n      count += item.children\r\n        .map(getExpandedItemCount)\r\n        .reduce(function (total: number, count: number) {\r\n          return total + count;\r\n        }, 0);\r\n    }\r\n\r\n    return count;\r\n  };\r\n\r\n  const cellRenderer = function cellRenderer(params: any) {\r\n    const renderedCell = renderItem(data[params.index], params.index);\r\n\r\n    return (\r\n      <ul key={params.key} style={params.style}>\r\n        {renderedCell}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const rowHeight = function rowHeight(params: any) {\r\n    return getExpandedItemCount(data[params.index]) * ROW_HEIGHT;\r\n  };\r\n\r\n  return (\r\n    <AutoSizer\r\n      children={function (params) {\r\n        return (\r\n          <VirtualList\r\n            height={params.height}\r\n            overscanRowCount={10}\r\n            ref={setRef}\r\n            rowHeight={rowHeight}\r\n            rowRenderer={cellRenderer}\r\n            width={params.width}\r\n            rowCount={data.length}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport VirtualTree from \"./VirtualTree\";\r\n\r\nexport function Explorer() {\r\n  return (\r\n    <div className=\"explorer\">\r\n      <VirtualTree />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Explorer } from \"./Explorer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Explorer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}